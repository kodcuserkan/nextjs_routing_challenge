{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/yahya/Desktop/Javascript/nexyjschallenge/testNextJS/pages/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport Header from '../components/header';\nimport useGlobal from '../utils/context/store/global';\n\nvar Home = function Home() {\n  _s();\n\n  // TODO: Create local state for first name which will change only on this page. It should also be able to update with global state.\n  var _useState = useState(\"\"),\n      newFirstName = _useState[0],\n      setnewFirstName = _useState[1];\n\n  var _useGlobal = useGlobal(),\n      _useGlobal2 = _slicedToArray(_useGlobal, 2),\n      globalState = _useGlobal2[0],\n      globalActions = _useGlobal2[1];\n\n  var _globalState$user = globalState.user,\n      name_first = _globalState$user.name_first,\n      name_last = _globalState$user.name_last;\n  /** TODO: Change first or last name which should show across website. \n   * i.e. Create text field that will change global state ALSO with local state on this page.\n   * \n   * This is a small example on how globalActions should be used.*/\n\n  var handleNameChange = function handleNameChange(event) {\n    var value = event.target.value;\n    globalActions.user.updateUser(_defineProperty({}, event.target.name, value));\n  }; // TODO: Create useEffect to change the last name ONCE upon showing this page.\n\n\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }), __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, \"Hello World!\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, \"Name: \", newFirstName || name_first, \", \", name_last), __jsx(\"label\", {\n    htmlFor: \"name_change\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, \"Change name: \"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"name_change\",\n    onChange: handleNameChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }));\n};\n\n_s(Home, \"kT7LUly7Ck3OiZd91G06SoyuyTQ=\", false, function () {\n  return [useGlobal];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/yahya/Desktop/Javascript/nexyjschallenge/testNextJS/pages/index.js"],"names":["React","useEffect","useState","Header","useGlobal","Home","newFirstName","setnewFirstName","globalState","globalActions","user","name_first","name_last","handleNameChange","event","value","target","updateUser","name"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;;AAIA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AAEjB;AAFiB,kBAGuBH,QAAQ,CAAC,EAAD,CAH/B;AAAA,MAGVI,YAHU;AAAA,MAGIC,eAHJ;;AAAA,mBAKoBH,SAAS,EAL7B;AAAA;AAAA,MAKVI,WALU;AAAA,MAKGC,aALH;;AAAA,0BAM2BD,WAN3B,CAMTE,IANS;AAAA,MAMDC,UANC,qBAMDA,UANC;AAAA,MAMWC,SANX,qBAMWA,SANX;AAQjB;AACF;AACA;AACA;;AACE,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAW;AAClC,QAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B;AACAN,IAAAA,aAAa,CAACC,IAAd,CAAmBO,UAAnB,qBAAgCH,KAAK,CAACE,MAAN,CAAaE,IAA7C,EAAmDH,KAAnD;AACD,GAHD,CAZiB,CAkBjB;;;AAEA,SAAQ,4BACN,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,EAEN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFM,EAGN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUT,YAAY,IAAIK,UAA1B,QAAwCC,SAAxC,CAHM,EAIN;AAAO,IAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJM,EAKN;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,EAAE,EAAC,aAAtB;AAAoC,IAAA,QAAQ,EAAEC,gBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALM,CAAR;AASD,CA7BD;;GAAMR,I;UAKiCD,S;;;KALjCC,I;AAgCN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Header from '../components/header'\nimport useGlobal from '../utils/context/store/global'\n\n\n\nconst Home = () => {\n\n  // TODO: Create local state for first name which will change only on this page. It should also be able to update with global state.\n  const [newFirstName, setnewFirstName] = useState(\"\");\n  \n  const [globalState, globalActions] = useGlobal();\n  const { user: { name_first, name_last } } = globalState\n\n  /** TODO: Change first or last name which should show across website. \n   * i.e. Create text field that will change global state ALSO with local state on this page.\n   * \n   * This is a small example on how globalActions should be used.*/ \n  const handleNameChange = (event) => {\n    const value = event.target.value\n    globalActions.user.updateUser({[event.target.name]:value});\n  }\n\n\n  // TODO: Create useEffect to change the last name ONCE upon showing this page.\n\n  return (<>\n    <Header />\n    <h1>Hello World!</h1>\n    <p>Name: {newFirstName || name_first}, {name_last}</p>\n    <label htmlFor=\"name_change\">Change name: </label>\n    <input type=\"text\" id=\"name_change\" onChange={handleNameChange}/>\n  </>\n  )\n\n}\n\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}