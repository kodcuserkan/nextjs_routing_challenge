{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var setUser = function setUser(store, user) {\n  store.setState({\n    user: user\n  });\n};\nexport var updateUser = function updateUser(store, dic) {\n  var user = store.state.user;\n\n  var newDic = _objectSpread(_objectSpread({}, user), dic);\n\n  store.setState({\n    user: newDic\n  });\n};","map":{"version":3,"sources":["/Users/yahya/Desktop/Javascript/nexyjschallenge/testNextJS/utils/context/actions/global/user.js"],"names":["setUser","store","user","setState","updateUser","dic","state","newDic"],"mappings":";;;;;;AAAA,OAAO,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,IAAR,EAAiB;AACpCD,EAAAA,KAAK,CAACE,QAAN,CAAe;AAAED,IAAAA,IAAI,EAAJA;AAAF,GAAf;AACH,CAFM;AAIP,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAa,CAACH,KAAD,EAAQI,GAAR,EAAgB;AAAA,MAC9BH,IAD8B,GACrBD,KAAK,CAACK,KADe,CAC9BJ,IAD8B;;AAEtC,MAAMK,MAAM,mCACLL,IADK,GAELG,GAFK,CAAZ;;AAIAJ,EAAAA,KAAK,CAACE,QAAN,CAAe;AAAED,IAAAA,IAAI,EAAEK;AAAR,GAAf;AACH,CAPM","sourcesContent":["export const setUser = (store, user) => {\n    store.setState({ user });\n};\n\nexport const updateUser = (store, dic) => {\n    const { user } = store.state;\n    const newDic = {\n        ...user,\n        ...dic,\n    };\n    store.setState({ user: newDic });\n};"]},"metadata":{},"sourceType":"module"}