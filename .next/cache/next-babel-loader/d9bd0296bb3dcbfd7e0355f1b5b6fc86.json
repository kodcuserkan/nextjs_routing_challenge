{"ast":null,"code":"var _jsxFileName = \"/Users/yahya/Desktop/Javascript/nexyjschallenge/testNextJS/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport Header from '../components/header';\nimport useGlobal from '../utils/context/store/global';\n\nconst Home = () => {\n  // TODO: Create local state for first name which will change only on this page. It should also be able to update with global state.\n  const {\n    0: newFirstName,\n    1: setnewFirstName\n  } = useState(\"\");\n  const [globalState, globalActions] = useGlobal();\n  const {\n    user: {\n      name_first,\n      name_last\n    }\n  } = globalState;\n  /** TODO: Change first or last name which should show across website. \n   * i.e. Create text field that will change global state ALSO with local state on this page.\n   * \n   * This is a small example on how globalActions should be used.*/\n  // const handleNameChange = (event) => {\n  //   const value = event.target.value\n  //   globalActions.user.updateUser({[event.target.name]:value});\n  // }\n  // TODO: Create useEffect to change the last name ONCE upon showing this page.\n\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, \"Hello World!\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, \"Name: \", newFirstName || name_first, \", \", name_last));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/yahya/Desktop/Javascript/nexyjschallenge/testNextJS/pages/index.js"],"names":["React","useEffect","useState","Header","useGlobal","Home","newFirstName","setnewFirstName","globalState","globalActions","user","name_first","name_last"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;;AAIA,MAAMC,IAAI,GAAG,MAAM;AAEjB;AACA,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCL,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAM,CAACM,WAAD,EAAcC,aAAd,IAA+BL,SAAS,EAA9C;AACA,QAAM;AAAEM,IAAAA,IAAI,EAAE;AAAEC,MAAAA,UAAF;AAAcC,MAAAA;AAAd;AAAR,MAAsCJ,WAA5C;AAEA;AACF;AACA;AACA;AACE;AACA;AACA;AACA;AAEA;;AAEA,SAAQ,4BACN,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,EAEN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFM,EAGN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUF,YAAY,IAAIK,UAA1B,QAAwCC,SAAxC,CAHM,CAAR;AAOD,CA1BD;;AA6BA,eAAeP,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Header from '../components/header'\nimport useGlobal from '../utils/context/store/global'\n\n\n\nconst Home = () => {\n\n  // TODO: Create local state for first name which will change only on this page. It should also be able to update with global state.\n  const [newFirstName, setnewFirstName] = useState(\"\");\n  \n  const [globalState, globalActions] = useGlobal();\n  const { user: { name_first, name_last } } = globalState\n\n  /** TODO: Change first or last name which should show across website. \n   * i.e. Create text field that will change global state ALSO with local state on this page.\n   * \n   * This is a small example on how globalActions should be used.*/ \n  // const handleNameChange = (event) => {\n  //   const value = event.target.value\n  //   globalActions.user.updateUser({[event.target.name]:value});\n  // }\n\n  // TODO: Create useEffect to change the last name ONCE upon showing this page.\n\n  return (<>\n    <Header />\n    <h1>Hello World!</h1>\n    <p>Name: {newFirstName || name_first}, {name_last}</p>\n  </>\n  )\n\n}\n\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}