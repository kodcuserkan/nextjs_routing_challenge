{"ast":null,"code":"var _jsxFileName = \"/Users/yahya/Desktop/Javascript/nexyjschallenge/testNextJS/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"../components/header\";\nimport useGlobal from \"../utils/context/store/global\";\n\nconst Home = () => {\n  // TODO: Create local state for first name which will change only on this page. It should also be able to update with global state.\n  const {\n    0: newFirstName,\n    1: setnewFirstName\n  } = useState(\"\");\n  const [globalState, globalActions] = useGlobal();\n  const {\n    user: {\n      name_first,\n      name_last\n    }\n  } = globalState;\n  /** TODO: Change first or last name which should show across website.\n   * i.e. Create text field that will change global state ALSO with local state on this page.\n   *\n   * This is a small example on how globalActions should be used.*/\n\n  const handleNameChange = event => {\n    const value = event.target.value;\n    console.log(globalActions.user.updateUser);\n    globalActions.user.updateUser({\n      [event.target.name]: value\n    });\n  }; // TODO: Create useEffect to change the last name ONCE upon showing this page.\n\n\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"Hello World!\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"Name: \", newFirstName || name_first, \", \", name_last), __jsx(\"label\", {\n    htmlFor: \"name_change\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Change name: \"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"name_change\",\n    name: \"Name Global\",\n    onChange: handleNameChange,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/yahya/Desktop/Javascript/nexyjschallenge/testNextJS/pages/index.js"],"names":["React","useEffect","useState","Header","useGlobal","Home","newFirstName","setnewFirstName","globalState","globalActions","user","name_first","name_last","handleNameChange","event","value","target","console","log","updateUser","name"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB;AACA,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCL,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAM,CAACM,WAAD,EAAcC,aAAd,IAA+BL,SAAS,EAA9C;AACA,QAAM;AACJM,IAAAA,IAAI,EAAE;AAAEC,MAAAA,UAAF;AAAcC,MAAAA;AAAd;AADF,MAEFJ,WAFJ;AAIA;AACF;AACA;AACA;;AACE,QAAMK,gBAAgB,GAAIC,KAAD,IAAW;AAClC,UAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYT,aAAa,CAACC,IAAd,CAAmBS,UAA/B;AACAV,IAAAA,aAAa,CAACC,IAAd,CAAmBS,UAAnB,CAA8B;AAAE,OAACL,KAAK,CAACE,MAAN,CAAaI,IAAd,GAAqBL;AAAvB,KAA9B;AACD,GAJD,CAbiB,CAmBjB;;;AAEA,SACE,4BACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACST,YAAY,IAAIK,UADzB,QACuCC,SADvC,CAHF,EAME;AAAO,IAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBANF,EAOE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,EAAE,EAAC,aAFL;AAGE,IAAA,IAAI,EAAC,aAHP;AAIE,IAAA,QAAQ,EAAEC,gBAJZ;AAKE,IAAA,YAAY,EAAC,KALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAiBD,CAtCD;;AAwCA,eAAeR,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Header from \"../components/header\";\nimport useGlobal from \"../utils/context/store/global\";\n\nconst Home = () => {\n  // TODO: Create local state for first name which will change only on this page. It should also be able to update with global state.\n  const [newFirstName, setnewFirstName] = useState(\"\");\n\n  const [globalState, globalActions] = useGlobal();\n  const {\n    user: { name_first, name_last },\n  } = globalState;\n\n  /** TODO: Change first or last name which should show across website.\n   * i.e. Create text field that will change global state ALSO with local state on this page.\n   *\n   * This is a small example on how globalActions should be used.*/\n  const handleNameChange = (event) => {\n    const value = event.target.value;\n    console.log(globalActions.user.updateUser);\n    globalActions.user.updateUser({ [event.target.name]: value });\n  };\n\n  // TODO: Create useEffect to change the last name ONCE upon showing this page.\n\n  return (\n    <>\n      <Header />\n      <h1>Hello World!</h1>\n      <p>\n        Name: {newFirstName || name_first}, {name_last}\n      </p>\n      <label htmlFor=\"name_change\">Change name: </label>\n      <input\n        type=\"text\"\n        id=\"name_change\"\n        name=\"Name Global\"\n        onChange={handleNameChange}\n        autoComplete=\"off\"\n      />\n    </>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}